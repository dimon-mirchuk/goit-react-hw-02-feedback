{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackStat/FeedbackStat.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/FeedbackStat/FeedbackStat.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","styles","buttonList","map","option","type","button","onClick","list","item","FeedbackStat","good","neutral","bad","total","positivePercentage","Section","title","children","section","sectionTitle","Notification","message","defaultProps","App","state","feedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,WAAa,oCAAoC,OAAS,kC,gBCA5ED,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,6B,gBCA3DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,mMC4BrDC,EA1BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIC,UAAWC,IAAOC,WAAtB,SACGJ,EAAQK,KAAI,SAACC,GACZ,OACE,6BACE,wBACEC,KAAK,SACLL,UAAWC,IAAOK,OAClB,gBAAeF,EACfG,QAASR,EAJX,SAMGK,KAPIA,S,gBCLXI,EAAeP,IAAfO,KAAMC,EAASR,IAATQ,KAsBCC,EApBM,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACjD,OACE,qBAAIf,UAAWQ,EAAf,UACE,qBAAIR,UAAWS,EAAf,mBAA4BE,KAC5B,qBAAIX,UAAWS,EAAf,sBAA+BG,KAC/B,qBAAIZ,UAAWS,EAAf,kBAA2BI,KAC3B,qBAAIb,UAAWS,EAAf,oBAA6BK,KAC7B,qBAAId,UAAWS,EAAf,gCAAyCM,EAAzC,W,gBCKSC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASlB,UAAWC,IAAOkB,QAA3B,UACE,oBAAInB,UAAWC,IAAOmB,aAAtB,SAAqCH,IACpCC,MCLDG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,aAAe,CAAED,QAAS,IAMxBD,QCHTG,E,4MACJC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPd,gBAAkB,YAAiB,IACzB2B,EADwB,EAAbC,OACSC,QAApBF,SACR,EAAKG,UAAS,SAACC,GAAD,sBAAmBJ,EAAWI,EAAUJ,GAAY,O,EAGpEK,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQd,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBmB,gCAAkC,WAChC,IAAQrB,EAAS,EAAKc,MAAdd,KACFG,EAAQ,EAAKiB,qBACnB,OAAOjB,EAAQmB,KAAKC,MAAOvB,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,MAA+BqB,KAAKV,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQqB,KAAKJ,qBACbhB,EAAqBoB,KAAKH,kCAChC,OACE,qCACE,cAAC,EAAD,CAASf,MAAM,wBAAf,SACE,cAAC,EAAD,CACEnB,QAASsC,OAAOC,KAAKF,KAAKV,OAC1B1B,gBAAiBoC,KAAKpC,oBAG1B,cAAC,EAAD,CAASkB,MAAM,aAAf,SACGH,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcO,QAAQ,+B,GA7ChBgB,aAqDHd,ICvDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a5a2ecb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__1HLH9\",\"button\":\"FeedbackOptions_button__LrYxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackStat_list__HSZ93\",\"item\":\"FeedbackStat_item__3Eiye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__5Lf4g\",\"sectionTitle\":\"Section_sectionTitle__2BbrV\"};","import PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={styles.buttonList}>\n      {options.map((option) => {\n        return (\n          <li key={option}>\n            <button\n              type=\"button\"\n              className={styles.button}\n              data-feedback={option}\n              onClick={onLeaveFeedback}\n            >\n              {option}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FeedbackStat.module.css\";\n\nconst { list, item } = styles;\n\nconst FeedbackStat = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={list}>\n      <li className={item}>Good: {good}</li>\n      <li className={item}>Neutral: {neutral}</li>\n      <li className={item}>Bad: {bad}</li>\n      <li className={item}>Total: {total}</li>\n      <li className={item}>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n};\n\nFeedbackStat.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default FeedbackStat;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h1 className={styles.sectionTitle}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.defaultProps = { message: \"\" };\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport FeedbackStat from \"./FeedbackStat\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState((prevState) => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <FeedbackStat\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}