{"version":3,"sources":["components/FeedbackStat/FeedbackStat.module.css","components/Section/Section.module.css","components/FeedbackBtns/FeedbackBtns.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/FeedbackBtns/FeedbackBtns.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/FeedbackStat/FeedbackStat.js","components/Section/Section.js","components/Container/Container.js","components/App.js","index.js"],"names":["module","exports","FeedbackBtns","feedback","onLeaveFeedback","type","className","styles","button","onClick","FeedbackOptions","options","buttonList","map","option","Notification","message","defaultProps","list","item","FeedbackStat","good","neutral","bad","total","positivePercentage","Section","title","children","styless","section","Container","App","state","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,6B,gBCA3DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,gBAAgB,iC,oBCArED,EAAOC,QAAU,CAAC,OAAS,+B,gBCA3BD,EAAOC,QAAU,CAAC,WAAa,sC,gBCA/BD,EAAOC,QAAU,CAAC,UAAY,+B,+LCgBfC,EAfM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAChC,OACE,6BACE,wBACEC,KAAK,SACLC,UAAWC,IAAOC,OAClB,gBAAeL,EACfM,QAASL,EAJX,SAMGD,KAPIA,I,iBCeEO,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASP,EAAsB,EAAtBA,gBAClC,OACE,oBAAIE,UAAWC,IAAOK,WAAtB,SACGD,EAAQE,KAAI,SAACC,GAAD,OACXZ,EAAa,CAAEC,SAAUW,EAAQV,0BCNnCW,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,aAAe,CAAED,QAAS,IAMxBD,Q,gBCNPG,EAAeX,IAAfW,KAAMC,EAASZ,IAATY,KA0BCC,EAxBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACnB,mCACGD,EACC,qBAAIlB,UAAWY,EAAf,UACE,qBAAIZ,UAAWa,EAAf,mBAA4BE,KAC5B,qBAAIf,UAAWa,EAAf,sBAA+BG,KAC/B,qBAAIhB,UAAWa,EAAf,kBAA2BI,KAC3B,qBAAIjB,UAAWa,EAAf,oBAA6BK,KAC7B,qBAAIlB,UAAWa,EAAf,gCAAyCM,EAAzC,UAGF,cAAC,EAAD,CAAcT,QAAQ,yB,gBCdtBU,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAAStB,UAAWuB,IAAQC,QAA5B,UACE,oBAAIxB,UAAWuB,IAAQC,QAAUH,EAAjC,SAAyCA,IACxCC,MAKPF,EAAQT,aAAe,CACrBU,MAAO,GACPC,SAAU,IAQGF,Q,iBCXAK,MARf,YAAkC,IAAbH,EAAY,EAAZA,SACnB,OAAO,qBAAKtB,UAAWC,IAAOwB,UAAvB,SAAmCH,KCGtCI,E,4MACJC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPnB,gBAAkB,YAAiB,IACzBD,EADwB,EAAb+B,OACSC,QAApBhC,SACR,EAAKiC,UAAS,SAACC,GAAD,sBAAmBlC,EAAWkC,EAAUlC,GAAY,O,EAGpEmC,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQZ,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBgB,gCAAkC,WAChC,IAAQlB,EAAS,EAAKY,MAAdZ,KACFG,EAAQ,EAAKc,qBACnB,OAAOd,EAAQgB,KAAKC,MAAOpB,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,MAA+BkB,KAAKT,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQkB,KAAKJ,qBACbb,EAAqBiB,KAAKH,kCAChC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEhB,QAAS,CAAC,OAAQ,UAAW,OAC7BP,gBAAiBsC,KAAKtC,oBAG1B,cAAC,EAAD,CAASuB,MAAM,aAAf,SACE,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAzCdkB,aAiDHX,ICnDfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.84711053.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackStat_list__3hb2x\",\"item\":\"FeedbackStat_item__2MKv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__11V5z\",\"section-title\":\"Section_section-title__L5-pn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackBtns_button__3tzQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__2ujpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__nLVfr\"};","import styles from \"./FeedbackBtns.module.css\";\n\nconst FeedbackBtns = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <li key={feedback}>\n      <button\n        type=\"button\"\n        className={styles.button}\n        data-feedback={feedback}\n        onClick={onLeaveFeedback}\n      >\n        {feedback}\n      </button>\n    </li>\n  );\n};\n\nexport default FeedbackBtns;\n","import PropTypes from \"prop-types\";\nimport FeedbackBtns from \"../FeedbackBtns\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={styles.buttonList}>\n      {options.map((option) =>\n        FeedbackBtns({ feedback: option, onLeaveFeedback })\n      )}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.defaultProps = { message: \"\" };\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\nimport Notification from \"../Notification\";\nimport styles from \"./FeedbackStat.module.css\";\n\nconst { list, item } = styles;\n\nconst FeedbackStat = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    {total ? (\n      <ul className={list}>\n        <li className={item}>Good: {good}</li>\n        <li className={item}>Neutral: {neutral}</li>\n        <li className={item}>Bad: {bad}</li>\n        <li className={item}>Total: {total}</li>\n        <li className={item}>Positive feedback: {positivePercentage}%</li>\n      </ul>\n    ) : (\n      <Notification message=\"No feedback given\" />\n    )}\n  </>\n);\n\nFeedbackStat.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default FeedbackStat;\n","import PropTypes from \"prop-types\";\nimport styless from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styless.section}>\n      <h1 className={styless.section - title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: \"\",\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport FeedbackStat from \"./FeedbackStat\";\nimport Section from \"./Section\";\nimport Container from \"./Container\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState((prevState) => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <FeedbackStat\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}